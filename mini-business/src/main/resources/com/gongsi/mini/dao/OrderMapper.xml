<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gongsi.mini.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.gongsi.mini.entities.Order">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="seller_id" jdbcType="VARCHAR" property="sellerId" />
    <result column="activity_id" jdbcType="BIGINT" property="activityId" />
    <result column="address_id" jdbcType="BIGINT" property="addressId" />
    <result column="express_number" jdbcType="VARCHAR" property="expressNumber" />
    <result column="express_name" jdbcType="VARCHAR" property="expressName" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>

  <resultMap id="VOMap" type="com.gongsi.mini.vo.OrderVO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_number" property="orderNumber" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="seller_id" property="sellerId" jdbcType="VARCHAR" />
    <result column="activity_id" property="activityId" jdbcType="BIGINT" />
    <result column="status" property="status"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <collection property="orderItemList" column="order_number" select="com.gongsi.mini.dao.OrderItemMapper.selectByOrderNumber"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, order_number, user_id, seller_id, activity_id, address_id, express_number, express_name, 
    comment, status, create_time
  </sql>

  <select id="countByUserId" parameterType="java.lang.String">
    SELECT COUNT(*) FROM `order`
    WHERE user_id = #{userId}
  </select>

  <select id="selectByOrderNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM `order`
    WHERE order_number = #{orderNumber}
  </select>

  <select id="selectList" resultMap="VOMap">
    SELECT order_number, user_id, activity_id,comment, status, create_time
    FROM `order`
    WHERE user_id = #{userId} AND status = #{status}
  </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.gongsi.mini.entities.Order">
    insert into order (id, order_number, user_id, 
      seller_id, activity_id, address_id, 
      express_number, express_name, comment, 
      status, create_time)
    values (#{id,jdbcType=BIGINT}, #{orderNumber,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{sellerId,jdbcType=VARCHAR}, #{activityId,jdbcType=BIGINT}, #{addressId,jdbcType=BIGINT}, 
      #{expressNumber,jdbcType=VARCHAR}, #{expressName,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gongsi.mini.entities.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="expressNumber != null">
        express_number,
      </if>
      <if test="expressName != null">
        express_name,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=BIGINT},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=BIGINT},
      </if>
      <if test="expressNumber != null">
        #{expressNumber,jdbcType=VARCHAR},
      </if>
      <if test="expressName != null">
        #{expressName,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gongsi.mini.entities.Order">
    update order
    <set>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=BIGINT},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=BIGINT},
      </if>
      <if test="expressNumber != null">
        express_number = #{expressNumber,jdbcType=VARCHAR},
      </if>
      <if test="expressName != null">
        express_name = #{expressName,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gongsi.mini.entities.Order">
    update order
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      seller_id = #{sellerId,jdbcType=VARCHAR},
      activity_id = #{activityId,jdbcType=BIGINT},
      address_id = #{addressId,jdbcType=BIGINT},
      express_number = #{expressNumber,jdbcType=VARCHAR},
      express_name = #{expressName,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.gongsi.mini.entities.Order">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="activity_id" jdbcType="BIGINT" property="activityId" />
    <result column="address_id" jdbcType="BIGINT" property="addressId" />
    <result column="express_number" jdbcType="VARCHAR" property="expressNumber" />
    <result column="express_name" jdbcType="VARCHAR" property="expressName" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_number, user_id, activity_id, address_id, express_number, express_name, 
    comment, status, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.gongsi.mini.entities.Order">
    insert into order (id, order_number, user_id, 
      activity_id, address_id, express_number, 
      express_name, comment, status, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{orderNumber,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{activityId,jdbcType=BIGINT}, #{addressId,jdbcType=BIGINT}, #{expressNumber,jdbcType=VARCHAR}, 
      #{expressName,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gongsi.mini.entities.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="expressNumber != null">
        express_number,
      </if>
      <if test="expressName != null">
        express_name,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=BIGINT},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=BIGINT},
      </if>
      <if test="expressNumber != null">
        #{expressNumber,jdbcType=VARCHAR},
      </if>
      <if test="expressName != null">
        #{expressName,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gongsi.mini.entities.Order">
    update order
    <set>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=BIGINT},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=BIGINT},
      </if>
      <if test="expressNumber != null">
        express_number = #{expressNumber,jdbcType=VARCHAR},
      </if>
      <if test="expressName != null">
        express_name = #{expressName,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gongsi.mini.entities.Order">
    update order
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      activity_id = #{activityId,jdbcType=BIGINT},
      address_id = #{addressId,jdbcType=BIGINT},
      express_number = #{expressNumber,jdbcType=VARCHAR},
      express_name = #{expressName,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>