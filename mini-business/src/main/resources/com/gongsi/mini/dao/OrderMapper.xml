<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gongsi.mini.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.gongsi.mini.entities.Order" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_number" property="orderNumber" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="seller_id" property="sellerId" jdbcType="VARCHAR" />
    <result column="activity_id" property="activityId" jdbcType="BIGINT" />
    <result column="receiver_name" property="receiverName" jdbcType="VARCHAR" />
    <result column="receiver_address" property="receiverAddress" jdbcType="VARCHAR" />
    <result column="receiver_mobile" property="receiverMobile" jdbcType="VARCHAR" />
    <result column="express_number" property="expressNumber" jdbcType="VARCHAR" />
    <result column="express_name" property="expressName" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="VOMap" type="com.gongsi.mini.vo.OrderVO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_number" property="orderNumber" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="seller_id" property="sellerId" jdbcType="VARCHAR" />
    <result column="activity_id" property="activityId" jdbcType="BIGINT" />
    <result column="status" property="status"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <collection property="orderItemList" column="order_number" select="com.gongsi.mini.dao.OrderItemMapper.selectByOrderNumber"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_number, user_id, seller_id, activity_id, receiver_name, receiver_address, 
    receiver_mobile, express_number, express_name, comment, status, create_time
  </sql>

  <select id="countByUserId" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM `order`
    WHERE user_id = #{userId}
  </select>

  <select id="selectByOrderNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM `order`
    WHERE order_number = #{orderNumber}
  </select>

  <select id="selectList" resultMap="VOMap">
    SELECT order_number, user_id,seller_id, activity_id,comment, status, create_time
    FROM `order`
    WHERE user_id = #{userId} AND status = #{status}
  </select>

  <select id="countActivityOrderList" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM `order`
    WHERE activity_id = #{vo.activityId}
    <if test="vo.status !=null">
      AND status = #{vo.status}
    </if>
  </select>
  <select id="activityOrderList" resultMap="VOMap">
    SELECT order_number, user_id, seller_id, activity_id,comment, status, create_time
    FROM `order`
    WHERE activity_id = #{vo.activityId}
    <if test="vo.status !=null">
      AND status = #{vo.status}
    </if>
    ORDER BY id DESC
    limit #{pagination.offSize},#{pagination.pageSize}
  </select>
  <select id="activityBuyList" parameterType="java.lang.Long" resultType="com.gongsi.mini.vo.GoodsVO">
    SELECT oi.goods_id id,oi.goods_name name,g.picture,SUM(oi.quantity) total
    FROM order_item oi
    JOIN (SELECT order_number FROM `order` WHERE activity_id = #{activityId}) o
    ON o.order_number = oi.order_number
    LEFT JOIN goods g ON g.id = oi.goods_id
    GROUP BY goods_id;
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `order`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.gongsi.mini.entities.Order" >
    insert into order (id, order_number, user_id, 
      seller_id, activity_id, receiver_name, 
      receiver_address, receiver_mobile, express_number, 
      express_name, comment, status, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{orderNumber,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{sellerId,jdbcType=VARCHAR}, #{activityId,jdbcType=BIGINT}, #{receiverName,jdbcType=VARCHAR}, 
      #{receiverAddress,jdbcType=VARCHAR}, #{receiverMobile,jdbcType=VARCHAR}, #{expressNumber,jdbcType=VARCHAR}, 
      #{expressName,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gongsi.mini.entities.Order">
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNumber != null" >
        order_number,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="receiverName != null" >
        receiver_name,
      </if>
      <if test="receiverAddress != null" >
        receiver_address,
      </if>
      <if test="receiverMobile != null" >
        receiver_mobile,
      </if>
      <if test="expressNumber != null" >
        express_number,
      </if>
      <if test="expressName != null" >
        express_name,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=BIGINT},
      </if>
      <if test="receiverName != null" >
        #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null" >
        #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverMobile != null" >
        #{receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="expressNumber != null" >
        #{expressNumber,jdbcType=VARCHAR},
      </if>
      <if test="expressName != null" >
        #{expressName,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gongsi.mini.entities.Order">
    update `order`
    <set>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=BIGINT},
      </if>
      <if test="receiverName != null" >
        receiver_name = #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null" >
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverMobile != null" >
        receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="expressNumber != null" >
        express_number = #{expressNumber,jdbcType=VARCHAR},
      </if>
      <if test="expressName != null" >
        express_name = #{expressName,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gongsi.mini.entities.Order" >
    update order
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      seller_id = #{sellerId,jdbcType=VARCHAR},
      activity_id = #{activityId,jdbcType=BIGINT},
      receiver_name = #{receiverName,jdbcType=VARCHAR},
      receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},
      express_number = #{expressNumber,jdbcType=VARCHAR},
      express_name = #{expressName,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>