<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gongsi.mini.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.gongsi.mini.entities.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="nickName" property="nickName" jdbcType="VARCHAR" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
    <result column="is_seller" property="isSeller" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="VOMap" type="com.gongsi.mini.vo.UserVO" >
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="nickName" property="nickName" jdbcType="VARCHAR" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, nickName, open_id, avatar_url, is_seller, create_time
  </sql>

  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId}
  </select>

  <select id="selectByIds" resultMap="VOMap">
    SELECT user_id,nickName,avatar_url
    FROM `user`
    WHERE user_id IN
    <foreach collection="userIds" item="userId" open="(" close=")" separator=",">
      #{userId}
    </foreach>
  </select>

  <select id="selectByOpenId" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT <include refid="Base_Column_List"/>
    FROM `user`
    WHERE open_id = #{openId}
  </select>






  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.gongsi.mini.entities.User" >
    insert into user (id, user_id, nickName, 
      open_id, avatar_url, is_seller, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
      #{openId,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, #{isSeller,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gongsi.mini.entities.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="nickName != null" >
        nickName,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
      <if test="isSeller != null" >
        is_seller,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="isSeller != null" >
        #{isSeller,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gongsi.mini.entities.User" >
    update user
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nickName = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="isSeller != null" >
        is_seller = #{isSeller,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByUserIdSelective" parameterType="com.gongsi.mini.entities.User" >
    update user
    <set >
      <if test="nickName != null" >
        nickName = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="isSeller != null" >
        is_seller = #{isSeller,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gongsi.mini.entities.User" >
    update user
    set user_id = #{userId,jdbcType=VARCHAR},
      nickName = #{nickName,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      is_seller = #{isSeller,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>